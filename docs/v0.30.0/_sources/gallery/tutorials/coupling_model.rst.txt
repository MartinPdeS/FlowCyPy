
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/tutorials/coupling_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_coupling_model.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_coupling_model.py:


Flow Cytometry Workflow: Single Population Example
==================================================

This tutorial demonstrates a basic flow cytometry simulation using the FlowCyPy library.

The example covers the configuration of:
- A fluidic channel with hydrodynamic focusing
- A synthetic particle population (Exosome + HDL)
- A laser source and dual-detector optical system
- Scattering intensity calculation per detector

The resulting data are visualized using event-based plots.

Workflow Steps:
---------------
1. Define laser source and flow cell geometry
2. Add synthetic particle populations
3. Model optical scattering with two detectors
4. Visualize population and scattering response

.. GENERATED FROM PYTHON SOURCE LINES 24-26

Step 0: Imports and Setup
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 26-35

.. code-block:: Python


    from TypedUnit import ureg

    from FlowCyPy import OptoElectronics
    from FlowCyPy.detector import PMT
    from FlowCyPy.fluidics import FlowCell, Fluidics, ScattererCollection, population
    from FlowCyPy.opto_electronics import TransimpedanceAmplifier, source
    from FlowCyPy.signal_processing import Digitizer








.. GENERATED FROM PYTHON SOURCE LINES 36-38

Step 1: Define Optical Source
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: Python

    laser = source.GaussianBeam(
        numerical_aperture=0.3 * ureg.AU,
        wavelength=750 * ureg.nanometer,
        optical_power=20 * ureg.milliwatt,
    )








.. GENERATED FROM PYTHON SOURCE LINES 45-47

Step 2: Configure Flow Cell and Fluidics
----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 47-63

.. code-block:: Python

    flow_cell = FlowCell(
        sample_volume_flow=0.02 * ureg.microliter / ureg.second,
        sheath_volume_flow=0.1 * ureg.microliter / ureg.second,
        width=20 * ureg.micrometer,
        height=10 * ureg.micrometer,
    )

    scatterer_collection = ScattererCollection(medium_refractive_index=1.33 * ureg.RIU)

    # Add Exosome and HDL populations
    scatterer_collection.add_population(
        population.Exosome(particle_count=5e10 * ureg.particle / ureg.milliliter),
    )

    fluidics = Fluidics(scatterer_collection=scatterer_collection, flow_cell=flow_cell)








.. GENERATED FROM PYTHON SOURCE LINES 64-66

Step 3: Generate Particle Event DataFrame
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 66-71

.. code-block:: Python

    event_dataframe = fluidics.generate_event_dataframe(run_time=3.5 * ureg.millisecond)

    # Plot the diameter distribution of the particles
    event_dataframe.plot(x="Diameter", bins="auto")




.. image-sg:: /gallery/tutorials/images/sphx_glr_coupling_model_001.png
   :alt: Distribution of Diameter
   :srcset: /gallery/tutorials/images/sphx_glr_coupling_model_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 1200x500 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 72-74

Step 4: Define Detectors and Amplifier
--------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 74-86

.. code-block:: Python

    detector_forward = PMT(
        name="forward", phi_angle=0 * ureg.degree, numerical_aperture=0.3 * ureg.AU
    )

    detector_side = PMT(
        name="side", phi_angle=90 * ureg.degree, numerical_aperture=0.3 * ureg.AU
    )

    amplifier = TransimpedanceAmplifier(
        gain=100 * ureg.volt / ureg.ampere, bandwidth=10 * ureg.megahertz
    )








.. GENERATED FROM PYTHON SOURCE LINES 87-89

Step 5: Configure Digitizer and Opto-Electronics
------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 89-97

.. code-block:: Python

    digitizer = Digitizer(
        bit_depth="14bit", saturation_levels="auto", sampling_rate=60 * ureg.megahertz
    )

    opto_electronics = OptoElectronics(
        detectors=[detector_forward, detector_side], source=laser, amplifier=amplifier
    )








.. GENERATED FROM PYTHON SOURCE LINES 98-100

Step 6: Model Scattering Signals
--------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 100-104

.. code-block:: Python

    event_dataframe = opto_electronics.model_event(
        event_dataframe=event_dataframe, compute_cross_section=True
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Population  ScattererID
    Exosome     0                2.390960351586538e-07
                1                -6.38134371144122e-07
                2              -1.3322860917452604e-06
                3               4.5870202243455805e-07
                4               4.5661832465065596e-07
                                        ...           
                3436             5.907280032556267e-07
                3437           -1.0107106940451993e-06
                3438            -3.566310867296744e-07
                3439            -9.802691584797005e-07
                3440           -3.4098108574213416e-07
    Name: y, Length: 3441, dtype: pint[meter][Float64] 795.7747154594767 nanometer
    /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/FlowCyPy/source.py:255: UserWarning: Transverse distribution of particle flow exceed the waist of the source
      warnings.warn(
    Population  ScattererID
    Exosome     0                2.390960351586538e-07
                1                -6.38134371144122e-07
                2              -1.3322860917452604e-06
                3               4.5870202243455805e-07
                4               4.5661832465065596e-07
                                        ...           
                3436             5.907280032556267e-07
                3437           -1.0107106940451993e-06
                3438            -3.566310867296744e-07
                3439            -9.802691584797005e-07
                3440           -3.4098108574213416e-07
    Name: y, Length: 3441, dtype: pint[meter][Float64] 795.7747154594767 nanometer
    /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/FlowCyPy/source.py:255: UserWarning: Transverse distribution of particle flow exceed the waist of the source
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 105-107

Step 7: Visualize Scattering Intensity
--------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 107-108

.. code-block:: Python

    event_dataframe.plot(x="side", y="Csca")  # Color-coded by scattering cross-section



.. image-sg:: /gallery/tutorials/images/sphx_glr_coupling_model_002.png
   :alt: Scatterer Sampling Distribution
   :srcset: /gallery/tutorials/images/sphx_glr_coupling_model_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <seaborn.axisgrid.JointGrid object at 0x7fabcbcf47d0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.773 seconds)


.. _sphx_glr_download_gallery_tutorials_coupling_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: coupling_model.ipynb <coupling_model.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: coupling_model.py <coupling_model.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: coupling_model.zip <coupling_model.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/noise_sources/shot_noise.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_noise_sources_shot_noise.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_noise_sources_shot_noise.py:


Shot noise
==========

This example demonstrates the effect of different optical power levels on a flow cytometer detector.
We initialize the detector, apply varying optical power levels, and visualize the resulting signals
and their distributions.

.. GENERATED FROM PYTHON SOURCE LINES 10-28

.. code-block:: Python


    import numpy
    import matplotlib.pyplot as plt
    from TypedUnit import ureg

    from FlowCyPy import SimulationSettings
    from FlowCyPy.detector import Detector
    from FlowCyPy.signal_generator import SignalGenerator

    SimulationSettings.include_noises = True
    SimulationSettings.include_shot_noise = True
    SimulationSettings.include_dark_current_noise = False
    SimulationSettings.include_source_noise = False

    # Define optical power levels
    optical_powers = [1, 2, 4] * ureg.nanowatt  # Powers in watts
    sequence_length = 300








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Create a figure for signal visualization

.. GENERATED FROM PYTHON SOURCE LINES 30-81

.. code-block:: Python

    fig, (ax_signal, ax_hist) = plt.subplots(2, 1, figsize=(10, 6), sharex=False)

    # Loop over the optical power levels
    for optical_power in optical_powers:
        detector_name = f"{optical_power.magnitude:.1e} W"

        signal_generator = SignalGenerator(n_elements=sequence_length, time_units=ureg.second, signal_units=ureg.watt)

        signal_generator.create_zero_signal(detector_name)

        signal_generator.add_constant(
            signal_name=detector_name,
            constant=optical_power.to('watt')
        )

        # Initialize the detector
        detector = Detector(
            name=detector_name,
            responsivity=1 * ureg.ampere / ureg.watt,
            numerical_aperture=0.2 * ureg.AU,
            phi_angle=0 * ureg.degree
        )

        detector.apply_shot_noise(
            signal_generator=signal_generator,
            wavelength=1550 * ureg.nanometer,
            bandwidth=10 * ureg.megahertz
        )

        noise_current = signal_generator.get_signal(detector_name) * ureg.ampere

        # Plot the raw signal on the first axis
        ax_signal.step(numpy.arange(sequence_length), noise_current, label=detector.name)

        # Plot the histogram of the raw signal
        ax_hist.hist(noise_current, bins=50, alpha=0.6, label=detector.name)

    # Customize the axes
    ax_signal.set_title("Raw Signals at Different Optical Powers")
    ax_signal.set_ylabel("Signal Voltage (V)")
    ax_signal.legend()

    ax_hist.set_title("Histogram of Raw Signals")
    ax_hist.set_xlabel("Signal Voltage (V)")
    ax_hist.set_ylabel("Frequency")
    ax_hist.legend()


    # Show the plots
    plt.tight_layout()
    _ = plt.show()



.. image-sg:: /gallery/noise_sources/images/sphx_glr_shot_noise_001.png
   :alt: Raw Signals at Different Optical Powers, Histogram of Raw Signals
   :srcset: /gallery/noise_sources/images/sphx_glr_shot_noise_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.520 seconds)


.. _sphx_glr_download_gallery_noise_sources_shot_noise.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: shot_noise.ipynb <shot_noise.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: shot_noise.py <shot_noise.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: shot_noise.zip <shot_noise.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

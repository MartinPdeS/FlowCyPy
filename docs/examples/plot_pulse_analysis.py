"""
Analyzing Flow Cytometer Pulses
===============================

This example demonstrates how to analyze the pulses generated by a flow cytometer
using the `PulseAnalyzer` class.

Pulses in flow cytometry represent individual particles passing through a laser
beam. By analyzing these pulses, we can extract features such as peak height,
width, and area, which provide information about the properties of the particles.
"""

# Import the necessary libraries
import numpy as np
from FlowCytometry import PulseAnalyzer

# Create a synthetic signal with two Gaussian pulses
time = np.linspace(0, 10, 1000)
signal = np.exp(-((time - 3) ** 2) / (2 * 0.1 ** 2)) + np.exp(-((time - 7) ** 2) / (2 * 0.1 ** 2))

# Create a PulseAnalyzer instance
analyzer = PulseAnalyzer(time=time, signal=signal, height_threshold=0.5)

# Find peaks in the signal
analyzer.find_peaks()

# Calculate the widths and areas of the detected peaks
analyzer.calculate_widths()
analyzer.calculate_areas()

# Display the extracted features
analyzer.display_features()


analyzer.plot()
##############################################################################
# The above output shows the heights, widths, and areas of the detected pulses.
#
# These features are useful for characterizing particles in flow cytometry.
# For example, the peak height might correspond to the intensity of scattered
# light, while the width could indicate the time it takes for a particle to pass
# through the laser beam.
